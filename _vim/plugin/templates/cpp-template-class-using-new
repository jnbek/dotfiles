// =====================================================================================
//        Class:  |CLASSNAME|
//  Description:  |CURSOR|
// =====================================================================================

template < class T >
class |CLASSNAME|
{

  public:

    // ====================  LIFECYCLE   ========================================= 

    |CLASSNAME| ();                       // constructor 
    |CLASSNAME| ( const |CLASSNAME|<T> &other );  // copy constructor 
    ~|CLASSNAME| ();                      // destructor 

    // ====================  OPERATORS   ========================================= 

    const |CLASSNAME|& operator = ( const |CLASSNAME|<T> &other ); // assignment operator 

    // ====================  OPERATIONS  ========================================= 

    // ====================  ACCESS      ========================================= 

    // ====================  INQUIRY     ========================================= 

  protected:

  private:

}; // -----  end of template class  |CLASSNAME|  ----- 

//--------------------------------------------------------------------------------------
//       Class:  |CLASSNAME|
//      Method:  |CLASSNAME|
// Description:  constructor
//--------------------------------------------------------------------------------------
template < class T >
|CLASSNAME|<T>::|CLASSNAME| ()
{
}  // -----  end of constructor of template class |CLASSNAME|  ----- 

//--------------------------------------------------------------------------------------
//       Class:  |CLASSNAME|
//      Method:  |CLASSNAME|
// Description:  copy constructor
//--------------------------------------------------------------------------------------
template < class T >
|CLASSNAME|<T>::|CLASSNAME| ( const |CLASSNAME|<T> &other )
{
}  // -----  end of copy constructor of template class |CLASSNAME|  ----- 

//--------------------------------------------------------------------------------------
//       Class:  |CLASSNAME|
//      Method:  ~|CLASSNAME|
// Description:  destructor
//--------------------------------------------------------------------------------------
template < class T >
|CLASSNAME|<T>::~|CLASSNAME| ()
{
}  // -----  end of destructor of template class |CLASSNAME|  ----- 

//--------------------------------------------------------------------------------------
//       Class:  |CLASSNAME|
//      Method:  operator =
// Description:  assignment operator
//--------------------------------------------------------------------------------------
template < class T >
const |CLASSNAME|<T>& |CLASSNAME|<T>::operator = ( const |CLASSNAME|<T> &other )
{
  if(this!=&other)
  {
  }
  return *this;
}  // -----  end of assignment operator of template class |CLASSNAME|  ----- 

