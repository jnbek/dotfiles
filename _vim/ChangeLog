=======================================================================================
  RELEASE NOTES FOR VERSION 4.2.1
=======================================================================================
+ Bugfix: change needed for some menu names after patch 7.0.054 .

=======================================================================================
  RELEASE NOTES FOR VERSION 4.2
=======================================================================================
+ Setting the starting column for trailing comments improved.
+ Small bug in block uncommenting fixed.
+ Mac OS X : circumvent a Vim bug which caused a crash when loading plugin version 4.1.
+ File syntax/c.vim removed (but see help in csupport.txt).

=======================================================================================
  RELEASE NOTES FOR VERSION 4.1
=======================================================================================
+ A complete switch statement can be made from a list of labels.
+ Additional cases can be made from a list of labels.
+ Small bug in line end commenting fixed.
+ Some minor improvements.

=======================================================================================
  RELEASE NOTES FOR VERSION 4.0
=======================================================================================

+ Kernighan & Ritchie style for block statements can be enabled.
+ Changes to make it compatible with Vim 7.
+ Set C/C++ file type for source files which should not be preprocessed (*.i, *.ii).
+ Some minor improvements.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.11
=======================================================================================

+ Hotkeys and an accompanying reference card added.
+ Preparation for syntax based folding.
+ Some minor improvements.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.10
=======================================================================================

+ Remove "#if 0 ... #endif" from the inside. 
+ Change C comments to C++ comments and vice versa.
+ try..catch / catch / catch(...)  now can be set surround a marked area.
+ Prototype picking improved (for C++).
+ A hardcopy shows the localized date and time in the header line.
+ New help menu entry in the main menu of this plugin (shows the plugin documentation).
+ Switch between corresponding source and header files with <S-F2> if the plugin a.vim
  is present.
+ Plugin can be used with autocompletion for (, [, and { .

=======================================================================================
  RELEASE NOTES FOR VERSION 3.9.1
=======================================================================================

+ Doubling of file header for new c- and h-files under Windows fixed (Thanks to
   Fabricio C A Oliveira).
+ Tiny bug in the file open idioms fixed.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.9
=======================================================================================

+ Formatter 'indent' integrated.
+ Bugfix in the automatic header insertion.
+ Assert idiom added.
+ #if 0 ... #endif statement for blocking out code added.
+ Minor stylistic improvements in some idioms.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.8.2
=======================================================================================

+ Screen update problem solved: color inversion under FC4 (Thanks to Bernie Barton).
+ RTTI menu : additional v-mode.
+ Statement menu and C++ menu rearranged.
+ Include guard : name generation improved.
+ File header templates will be included for additional file extensions (cp, cxx, c++, ...).

=======================================================================================
  RELEASE NOTES FOR VERSION 3.8.1
=======================================================================================

+ More C++ output manipulators, manipulator insertion more intuitive.
+ Output into buffer: cursor goes to top of file.
+ Makefile template improved (code snippet).
+ Some internal improvements. 

=======================================================================================
  RELEASE NOTES FOR VERSION 3.8
=======================================================================================

+ Windows support. Most features are now available under Windows.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.7.2
=======================================================================================

+ Run buffer through splint (A tool for statically checking C programs; see
  http://www.splint.org). An error window will be opened; quickfix commands can be used.
+ Set buffer related command line arguments for splint.
+ Line end comments start in a fixed column (can be set from the menu).
+ Spaces in path names and file names are now possible.
+ Template files and snippet files are no longer kept in the list of alternate files.
+ Some minor improvements.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.7.1
=======================================================================================

+ Bug fixed (command line arguments not passed to the executable).
+ File extension for executables can be set.
+ Minor improvements.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.7
=======================================================================================

+ Running a program:
  (1) Run program from the gVim command line.
  (2) Run program and direct the output into a window with name "C-Output". 
      This buffer and its content will disappear when closing the window. 
      The buffer is reused when still open.
  (3) Run program in an xterm (adjustable).
+ Command line arguments are now buffer related (each buffer can have its own arguments).
+ Code snippets can be protected from being indented during insertion. 
+ Picked up prototypes will be deleted after insertion.
+ A code snippet with the file name extension "ni" or "noindent" will not be
  indented on insertion.
+ for- and calloc-/malloc-idioms improved.
+ Bug fixed (word list handling).


=======================================================================================
  RELEASE NOTES FOR VERSION 3.6
=======================================================================================

+ Installation simplified. 
+ for-loop-idiom asks for control variable, initial value, ...
+ malloc-idiom asks for pointer variable and size.
+ Toggling the comment style works correct again.
+ Empty error windows will be closed.
+ Prototype picker removes trailing parts of the function body if marked.
+ The dialog windows (GUI) have been replaced by more flexible command line inputs.
+ The undocumented and unnecessary hot key F12 has been removed.
+ Extension to ctags + taglist shows makefile targets and qmake targets.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.5
=======================================================================================

+ Aligned line end comments for consecutive lines.
+ Improved prototype picker removes comments.
+ Picked up prototypes can be shown.
+ Uncomment more than one block at once.
+ 3 new idioms.
+ Help file improved .

=======================================================================================
  RELEASE NOTES FOR VERSION 3.4
=======================================================================================

+ Two new global variables: C_Dictionary_File, C_MenuHeader .
+ The preprocessor statements #if... and the function idiom include marked 
  lines when invoked in visual mode.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.3
=======================================================================================

+ The C/C++ root menu can be disabled.

=======================================================================================
  RELEASE NOTES FOR VERSION 3.2
=======================================================================================

+ Only one C/C++ entry in the gVim root menu.
+ All hotkeys are only defined for C/C++ files (file type plugin added).
+ The following constructs are now read as templates from files:
   class, class using new, 
   template class, template class using new,
   error class
+ Install script added.
+ Customization improved. 
+ Documentation improved (help file added).
+ Bug fix (template file handling)

=======================================================================================
  RELEASE NOTES FOR VERSION 3.1
=======================================================================================

+ When the comment style "C" is active the menu entry "Comments.code->comment"
  turns a marked region in one multiline C-comment.
+ The menu entry "Comments.comment->code"  turns marked multiline C-comment 
  back into code.
+ A marked region can be surrounded by a for-, if, if-else, while-, do-while-statement
  (with indentation).
+ The menu entry "Snippets.make prototype" makes a C- or C++-prototype from 
  the current line or marked region and puts it in an internal buffer.
+ The menu entry "Snippets.add prototype" also makes a C- or C++-prototype from 
  the current line or a marked region and adds it to the internal buffer.
+ The menu entry "Snippets.put prototype" inserts all gathered prototypes 
  below the current line. 
+ Tag substitution rewritten (Some characters in a substitution text for a tag 
  prevented the tag from being substituted).

=======================================================================================
  RELEASE NOTES FOR VERSION 3.0
=======================================================================================

+ C-style comments AND C++-style comments are supported now.
+ The menu entry 'Comments->Comment style ..' switches the styles (toggle).
+ Block comments are now read as templates or skeletons from files:
    Frame Block,        Function Description,  Method Description,
    Class Description,  H+file header,         C/C++-file header
+ These templates can contain tags like |FILENAME|, |AUTHOR| etc. which are replaced
  after reading (KDevelop templates can be used without any change).
+ indentation: multiline inserts and code snippets will be indented after insertion.
+ Most menu entries are now also active in normal mode.
+ new menu items: 
    includes for the C99 header, 
    includes for the standard C++ header,
    includes for the C++ version of the Standard C Library header,
    multiline C comment
    vim modeline
+ Reading the templates is done in one function which can be called in an autocmd.
+ Code cleanup: register z no longer used. Most function calls are silent now.


